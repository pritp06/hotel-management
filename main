#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <conio.h> 

// Structure for customer details
struct CustomerDetails {
    char roomnumber[10];
    char roomtype[10];
    char name[30];
    char address[50];
    char phonenumber[15];
    char nationality[20];
    char email[50];
    char period[10];
    char arrivaldate[15];
    char aadharcard[20];
    char pancard[20];
} customer;

// Function declarations
void login();
void add();
void list();
void delete1();
void search();
void edit();

// Login function
void login() {
    char username[10], password[10], ch;
    const char valid_user[] = "prit";
    const char valid_pass[] = "prit0606";
    int attempts = 0;

    do {
        system("cls"); // Clear the screen
        printf("********** LOGIN **********\n");
        printf("\nUsername: ");
        scanf("%s", username);

        printf("Password: ");
        int i = 0;
        while ((ch = getch()) != '\r') { // Enter key stops input
            password[i++] = ch;
            printf("*");
        }
        password[i] = '\0';

        if (strcmp(username, valid_user) == 0 && strcmp(password, valid_pass) == 0) {
            printf("\n\nLogin successful!\n");
            system("pause");
            return;
        } else {
            printf("\n\nInvalid username or password.\n");
            attempts++;
            system("pause");
        }
    } while (attempts < 3);

    printf("\nToo many failed attempts. Exiting...\n");
    exit(1);
}

// Add customer record
void add() {
    FILE *file = fopen("hotel_records.txt", "a");
    if (!file) {
        printf("Error opening file!\n");
        return;
    }

    system("cls");
    printf("********** ADD NEW CUSTOMER **********\n");
    printf("Enter Room Number: ");
    scanf("%s", customer.roomnumber);
    printf("Enter Room Type (Single/Double): ");
    scanf("%s", customer.roomtype);
    printf("Enter Name: ");
    scanf("%s", customer.name);
    printf("Enter Address: ");
    scanf("%s", customer.address);
    printf("Enter Phone Number: ");
    scanf("%s", customer.phonenumber);
    printf("Enter Nationality: ");
    scanf("%s", customer.nationality);
    printf("Enter Email: ");
    scanf("%s", customer.email);
    printf("Enter Period of Stay: ");
    scanf("%s", customer.period);
    printf("Enter Arrival Date (DD/MM/YYYY): ");
    scanf("%s", customer.arrivaldate);
    printf("Enter Aadhar Card Number: ");
    scanf("%s", customer.aadharcard);
    printf("Enter PAN Card Number: ");
    scanf("%s", customer.pancard);

    fwrite(&customer, sizeof(customer), 1, file);
    fclose(file);
    printf("\nCustomer added successfully!\n");
    system("pause");
}

// View all customer records
void list() {
    FILE *file = fopen("hotel_records.txt", "r");
    if (!file) {
        printf("No records found.\n");
        return;
    }

    system("cls");
    printf("********** CUSTOMER RECORDS **********\n");

    while (fread(&customer, sizeof(customer), 1, file)) {
        printf("\nRoom Number: %s", customer.roomnumber);
        printf("\nRoom Type: %s", customer.roomtype);
        printf("\nName: %s", customer.name);
        printf("\nAddress: %s", customer.address);
        printf("\nPhone Number: %s", customer.phonenumber);
        printf("\nNationality: %s", customer.nationality);
        printf("\nEmail: %s", customer.email);
        printf("\nPeriod of Stay: %s", customer.period);
        printf("\nArrival Date: %s", customer.arrivaldate);
        printf("\nAadhar Card: %s", customer.aadharcard);
        printf("\nPAN Card: %s", customer.pancard);
        printf("\n------------------------------------");
    }

    fclose(file);
    system("pause");
}

// Delete a customer record
void delete1() {
    FILE *file = fopen("hotel_records.txt", "r");
    FILE *temp = fopen("temp.txt", "w");
    char roomnumber[10];
    int found = 0;

    if (!file || !temp) {
        printf("Error opening file!\n");
        return;
    }

    system("cls");
    printf("Enter the Room Number to delete: ");
    scanf("%s", roomnumber);

    while (fread(&customer, sizeof(customer), 1, file)) {
        if (strcmp(customer.roomnumber, roomnumber) != 0) {
            fwrite(&customer, sizeof(customer), 1, temp);
        } else {
            found = 1;
        }
    }

    fclose(file);
    fclose(temp);

    remove("hotel_records.txt");
    rename("temp.txt", "hotel_records.txt");

    if (found) {
        printf("\nRecord deleted successfully!\n");
    } else {
        printf("\nRecord not found!\n");
    }

    system("pause");
}

// Search for a customer record
void search() {
    FILE *file = fopen("hotel_records.txt", "r");
    char roomnumber[10];
    int found = 0;

    if (!file) {
        printf("No records found.\n");
        return;
    }

    system("cls");
    printf("Enter the Room Number to search: ");
    scanf("%s", roomnumber);

    while (fread(&customer, sizeof(customer), 1, file)) {
        if (strcmp(customer.roomnumber, roomnumber) == 0) {
            printf("\nRoom Number: %s", customer.roomnumber);
            printf("\nRoom Type: %s", customer.roomtype);
            printf("\nName: %s", customer.name);
            printf("\nAddress: %s", customer.address);
            printf("\nPhone Number: %s", customer.phonenumber);
            printf("\nNationality: %s", customer.nationality);
            printf("\nEmail: %s", customer.email);
            printf("\nPeriod of Stay: %s", customer.period);
            printf("\nArrival Date: %s", customer.arrivaldate);
            printf("\nAadhar Card: %s", customer.aadharcard);
            printf("\nPAN Card: %s", customer.pancard);
            found = 1;
            break;
        }
    }

    fclose(file);

    if (!found) {
        printf("\nRecord not found.\n");
    }

    system("pause");
}

// Edit a customer record
void edit() {
    FILE *file = fopen("hotel_records.txt", "r+");
    char roomnumber[10];
    int found = 0;

    if (!file) {
        printf("No records found.\n");
        return;
    }

    system("cls");
    printf("Enter the Room Number to edit: ");
    scanf("%s", roomnumber);

    while (fread(&customer, sizeof(customer), 1, file)) {
        if (strcmp(customer.roomnumber, roomnumber) == 0) {
            printf("\nEnter new details:\n");
            printf("Enter Room Type: ");
            scanf("%s", customer.roomtype);
            printf("Enter Name: ");
            scanf("%s", customer.name);
            printf("Enter Address: ");
            scanf("%s", customer.address);
            printf("Enter Phone Number: ");
            scanf("%s", customer.phonenumber);
            printf("Enter Nationality: ");
            scanf("%s", customer.nationality);
            printf("Enter Email: ");
            scanf("%s", customer.email);
            printf("Enter Period of Stay: ");
            scanf("%s", customer.period);
            printf("Enter Arrival Date: ");
            scanf("%s", customer.arrivaldate);
            printf("Enter Aadhar Card Number: ");
            scanf("%s", customer.aadharcard);
            printf("Enter PAN Card Number: ");
            scanf("%s", customer.pancard);

            fseek(file, -sizeof(customer), SEEK_CUR);
            fwrite(&customer, sizeof(customer), 1, file);
            found = 1;
            break;
        }
    }

    fclose(file);

    if (found) {
        printf("\nRecord updated successfully!\n");
    } else {
        printf("\nRecord not found.\n");
    }

    system("pause");
}

// Main function
int main() {
    char choice;

    login();

    while (1) {
        system("cls");
        printf("********** HOTEL MANAGEMENT SYSTEM **********\n");
        printf("1. Book a Room\n");
        printf("2. View Customer Records\n");
        printf("3. Delete a Customer Record\n");
        printf("4. Search a Customer Record\n");
        printf("5. Edit a Customer Record\n");
        printf("6. Exit\n");
        printf("\nEnter your choice: ");
        choice = getch();
        printf("%c\n", choice);

        switch (choice) {
            case '1':
                add();
                break;
            case '2':
                list();
                break;
            case '3':
                delete1();
                break;
            case '4':
                search();
                break;
            case '5':
                edit();
                break;
            case '6':
                printf("\nThank you for using the system!\n");
                exit(0);
            default:
                printf("\nInvalid choice. Try again.\n");
                system("pause");
        }
    }

    return 0;
}
